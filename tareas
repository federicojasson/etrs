Tareas (TODOs):

- ¿Desloguear usuario al borrarlo? (Borrar sesión). ¿Es seguro confiar en
  isUserSignedIn cuando sólo utiliza dato de la sesión (sin comprobar que el
  usuario existe)?

- Testear todos los servicios de forma automática (crear testers)

- Generar reporte

- Agregar licencia

- Chequear Warnings

- Implementar control de acceso más preciso

- Comentar base de datos

- Tareas de mantenimiento:
	- Eliminar permisos vencidos.
	- Eliminar logs antiguos.
	- Eliminar archivos huérfanos.

- Recordar configurar (en httpd.conf):
	# Added to remove the Server response header
	ServerTokens ProductOnly
	ServerSignature Off

- Recordar configurar (en php.ini):
	session.gc_probability
	session.gc_divisor
	session.gc_maxlifetime
	upload_max_filesize
	post_max_size
	expose_php=Off
	
	Note: Related Configurations Note
	See also the file_uploads, upload_max_filesize, upload_tmp_dir, post_max_size and max_input_time directives in php.ini

- Recordar configurar (en my.ini):
	query_cache_limit = 1048576
	query_cache_size = 10485760
	query_cache_type = 1

--------------------------------------------------------------------------------



- Ingresar datos de debug
- Verificar consultas SQL manualmente (especialmente aquellas con VARBINARY)

- Tener en cuenta los siguientes errores HTTP:

Errores semánticos (no sintácticos)????????? dudoso (implementación)
422 Unprocessable Entity
The request was well-formed but was unable to be followed due to semantic errors.
Con isUserAuthorized ocurre lo mismo: SecureController implementa sólo una parte
de la verificación (puede haber una "verificación semántica" que debe hacerse
en la lógica, tal vez podría verificarse igualmente la entrada).
Si se desea implementar todo en las dos funciones, debería enrocarse las verificaciones
(verificar la entrada primero y los permisos después)


Indicar en la documentación del server API los headers obligatorios para la request
Ejemplo: Content-Type: application/json



See TRANSACTION LEVELS
http://dev.mysql.com/doc/refman/5.1/en/set-transaction.html



Diccionario para el chequeo de contraseñas?



¿Usar transacciones para el manejo de sesión?



Leer:
http://stackoverflow.com/questions/549/the-definitive-guide-to-form-based-website-authentication#477579

Prestar atención a las cuestiones de seguridad




Sesiones: leer http://stackoverflow.com/questions/15510094/securely-creating-and-destroying-login-sessions-in-php




Generar un código de activación, hashearlo y hacerlo el requestId










CUIDADO: encoding vulnerability?? research this

http://stackoverflow.com/questions/1447699/strlen-mb-strlen-which-to-use

Generally you'll circumnavigate most encoding-related problems by consistently
using UTF-8 for everything and by specifying the correct encoding in the
HTTP-header (Content-Type: text/html; charset=UTF-8) - this will yield the
correct encoding (UTF-8) in all the variables that are passed into your string
(we're not talking about rouge scripts that deliberately try to mess with the
encoding to allow for some attack vectors into your script). You also should not
rely on non-ascii-characters in your GET parameters or in the URL (that's also a
reason why SEO-friendly links remove those characters or substitute them).



