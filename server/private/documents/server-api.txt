
================================================================================
About this document
================================================================================

This file summaries the server API. It describes the different services and
the way they are invoked. For each, it indicates:

- The URL to invoke it (relative to the site domain).
- The accepted HTTP method.
- The user roles authorized to request it.
- A brief description of what is it for.
- A detailed explanation of its usage.
- The expected input data.
- The output data if the operation succeeds.
- The specific errors that may occur and their reasons.




================================================================================
User roles
================================================================================

A user role determines the privileges of a user in the system. Each user
should have one and only one role.
The system handles the following user roles:

- Administrator.
- Doctor.
- Operator.
- Researcher.

Throughout this document, an special user role 'anonymous' is used to
indicate that a service can be invoked by not logged in users.




================================================================================
Error handling
================================================================================

Error responses
---------------

	In case of error, the server responds with the following JSON string:

	{
		"errorId": ...
	}

	An error ID is a predefined identifier that indicates the cause of the
	error. Client applications can receive this ID and show a custom message to
	the user.


Undefined services
------------------

	If the client sends a request for an undefined service, the server will
	respond with the following error:

	----------------------------------------------------------------------------
		HTTP error:	404 Not Found
		Error ID:	UNDEFINED_SERVICE
		Reason:		The service is not defined in the server API.
	----------------------------------------------------------------------------

	Note: a service is defined by both its URL and its HTTP method. A request
	for a service with an invalid HTTP method will receive an UNDEFINED_SERVICE
	error, even though the URL is correct.


Internal server errors
----------------------

	If the server fails unexpectedly due to some internal problem, it will
	respond with the following error:

	----------------------------------------------------------------------------
		HTTP error:	500 Internal Server Error
		Error ID:	UNEXPECTED_ERROR
		Reason:		The server failed unexpectedly due to some internal problem.
	----------------------------------------------------------------------------




================================================================================
Data types
================================================================================

Email
------

	TODO


Gender
------

	The valid values are:

	- 'f': female.
	- 'm': male.


User role
---------

	The valid values are:
	
	- 'ad': administrator.
	- 'dr': doctor.
	- 'op': operator.
	- 'rs': researcher.




================================================================================
Server API
================================================================================

The server API is described below.




================================================================================
URL:	/server/get-authentication-state
Method:	POST
================================================================================

Authorized users
----------------

	- Anonymous.
	- Administrators.
	- Doctors.
	- Operators.
	- Researchers.


Description
-----------

	Returns the user authentication state.


Details
-------

	The service is used to obtain the user authentication state in the server
	(i.e., whether the user is logged in or not).
	It doesn't receive any input.
	The output is the current authentication state, which contains an entry that
	indicates whether the user is logged in. In such a case, the user's ID is
	also included.


Input
-----

	None.


Output
------

	JSON string, if the user is not logged in:

	{
		"loggedIn": false
	}

	JSON string, if the user is logged in:

	{
		"loggedIn": true,
		"user": {
			"data": {
				"id": ...
			}
		}
	}


Specific errors
---------------

	None.




================================================================================
URL:	/server/log-in
Method:	POST
================================================================================

Authorized users
----------------

	- Anonymous.


Description
-----------

	Logs in a user in the server.


Details
-------

	The service allows a user to authenticate with the server.
	It receives the user's ID and password.
	The output contains an entry that indicates whether the user was
	successfully logged in.


Input
-----

	JSON string:

	{
		"userId": ...,
		"userPassword": ...
	}

	Conditions:

	- "userId" must be a non-empty string.
	- "userPassword" must be a non-empty string.


Output
------

	JSON string:

	{
		"loggedIn": ...
	}


Specific errors
---------------

	----------------------------------------------------------------------------
		HTTP error:	403 Forbidden
		Error ID:	UNAUTHORIZED_USER
		Reason:		The user is not authorized to invoke this service.
	----------------------------------------------------------------------------

	----------------------------------------------------------------------------
		HTTP error:	400 Bad Request
		Error ID:	INVALID_INPUT
		Reason:		The input didn't pass the validation.
	----------------------------------------------------------------------------




================================================================================
URL:	/server/log-out
Method:	POST
================================================================================

Authorized users
----------------

	- Administrators.
	- Doctors.
	- Operators.
	- Researchers.


Description
-----------

	Logs out the user from the server.


Details
-------

	The service allows a user to end its session with the server.
	It doesn't receive any input and has no output.


Input
-----

	None.


Output
------

	None.


Specific errors
---------------

	----------------------------------------------------------------------------
		HTTP error:	403 Forbidden
		Error ID:	UNAUTHORIZED_USER
		Reason:		The user is not authorized to invoke this service.
	----------------------------------------------------------------------------



